<?xml version='1.0' encoding='utf-8'?>

        <!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

        <hibernate-configuration>

            <session-factory>
                <!--数据库连接驱动-->
                <property name="connection.driver_class">com.mysql.cj.jdbc.Driver</property>

                <!--数据库连接地址-->
                <!--数据库路径  jdbc\:log4jdbc\:mysql\://localhost\:3306/dbo1?useUnicode\=true&characterEncoding\=utf-8-->
                <property name="connection.url">jdbc:mysql://localhost:3306/dbo1?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</property>

                <!--数据库连接用户名-->
                <property name="connection.username">root</property>

                <!--数据库连接密码-->
                <property name="connection.password">123456</property>

                <!-- 配置内置连接池中的连接数 -->
                <property name="connection.pool_size">5</property>

                <!-- 数据库方言配置 -->
                <!--<property name="dialect">org.hibernate.dialect.MySQLDialect</property>-->
                <property name="dialect">org.hibernate.dialect.MySQL8Dialect</property>

                <!--<!– Disable the second-level cache  –>-->
                <!--<property name="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</property>-->

                <!-- 操作数据库时，是否向控制台打印Sql语句 -->
                <property name="show_sql">true</property>

                <!-- 事务自动提交  -->
                <!--<property name="connection.autocommit">true</property>-->

                <!-- 将Session与线程绑定=> 只有配置了该配置,才能使用getCurrentSession -->
                <!--<property name="current_session_context_class">thread</property>-->

                <!-- 打印Sql语句前，是否将Sql语句格式化 -->
                <property name="format_sql">true</property>

                <!-- 生成表结构的策略配置
                    update(最常用的取值): 如果当前数据库中不存在表结构,那么自动创建表结构.
                                         如果存在表结构,并且表结构与实体一致,那么不做修改
                                         如果存在表结构,并且表结构与实体不一致,那么会修改表结构.会保留原有列.
                    create(很少):无论是否存在表结构.每次启动Hibernate都会重新创建表结构.(数据会丢失)
                    create-drop(极少): 无论是否存在表结构.每次启动Hibernate都会重新创建表结构.每次Hibernate运行结束时,删除表结构.
                    validate(很少):不会自动创建表结构.也不会自动维护表结构.Hibernate只校验表结构. 如果表结构不一致将会抛出异常.
                 -->
                <property name="hbm2ddl.auto">update</property>

                <!-- 引入ORM映射文件 填写src之后的路径-->
                <mapping resource="com.hao.entity/Employee.hbm.xml"/>

                <!-- 开启注解要扫描的类 -->
                <!--<mapping class="cn.coreqi.entities.Users"/>-->

            </session-factory>

        </hibernate-configuration>